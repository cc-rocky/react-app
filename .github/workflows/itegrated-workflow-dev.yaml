name: Trimilo - Frontend-Backend Deployment

on:
  push:
    branches:
      - master
      - main

jobs:
  build-react-project:
    runs-on: ubuntu-latest
    steps:
      - name: Log start time
        id: start_time
        run: |
          echo "::set-output name=start_time::$(date +%s)"
          echo "Workflow started at $(date)"

      - name: Checkout React Repo
        uses: actions/checkout@v2
        with:
          repository: cc-rocky/react-app
          ref: main

      - name: Notify Notification On Start
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "[Dev] Workflow *{workflow}* starting..."
          message_format: null
          footer: null
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: APC Provider Generate Signup Link Test
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: cc-rocky
          repo: express-app
          github_token: ${{secrets.PAN_TOKEN}}
          workflow_file_name: deploy-express-1.yaml
          ref: main
          wait_interval: 10
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
        # continue-on-error: true

      - name: Generate example file
        run: node index.js

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact # Specify the name of the artifact
          path: example.txt # Specify the path to your generated file

      - name: Log end time
        id: end_time
        run: |
          echo "::set-output name=end_time::$(date +%s)"
          echo "Workflow ended at $(date)"

      - name: Calculate duration
        id: duration
        run: |
          start_time=${{ steps.start_time.outputs.start_time }}
          end_time=${{ steps.end_time.outputs.end_time }}
          duration=$((end_time - start_time))
          if [[ $duration -lt 60 ]]; then
            echo "::set-output name=duration_output::${duration}s"
          else
            duration_minutes=$((duration / 60))
            echo "::set-output name=duration_output::${duration_minutes}m"
          fi

      - name: Notify Notification On Complete
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "[Dev] Workflow *{workflow}* completed in ${{steps.duration.outputs.duration_output }}"
          message_format: null
          footer: null
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
