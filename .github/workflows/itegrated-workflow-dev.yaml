name: Trimilo - Frontend-Backend Deployment

on:
  push:
    branches:
      - master
      - main

jobs:
  build-react-project:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          echo "Start Time: ${{ github.event.repository.created_at }}"
          echo "Start Time: ${{ github.event.repository.updated_at }}"

      - name: Checkout React Repo
        uses: actions/checkout@v2
        with:
          repository: cc-rocky/react-app
          ref: main

      - name: Notify Notification On Start
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "[Dev] Workflow *{workflow}* starting..."
          message_format: null
          footer: null
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Express App Deployment Trigger
        id: express-trigger
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: cc-rocky
          repo: express-app
          github_token: ${{secrets.PAN_TOKEN}}
          workflow_file_name: deploy-express-1.yaml
          ref: main
          wait_interval: 10
          propagate_failure: true
          trigger_workflow: true
          wait_workflow: true
        continue-on-error: true

      # - name: Invoke workflow in another repo with inputs
      #   uses: aurelien-baudet/workflow-dispatch@v2
      #   with:
      #     workflow: deploy-express-1.yaml
      #     repo: cc-rocky/express-app
      #     token: ${{ secrets.PAN_TOKEN }}
      #     wait-for-completion: true
      #     # inputs: '{ "message": "blah blah", "debug": true }'
      #   continue-on-error: true

      - name: Generate example file
        id: generate
        run: node index.js
        continue-on-error: true

      - name: Upload Artifact
        id: artifect-upload
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact # Specify the name of the artifact
          path: example.txt # Specify the path to your generated file
        continue-on-error: true

      # - name: Log end time
      #   id: end_time
      #   run: |
      #     echo "end_time=$(date +%s)" >> $GITHUB_OUTPUT

      # - name: Calculate duration
      #   id: duration
      #   run: |
      #     start_time=${{ steps.start_time.outputs.start_time }}
      #     end_time=${{ steps.end_time.outputs.end_time }}
      #     duration=$((end_time - start_time))
      #     if [[ $duration -lt 60 ]]; then
      #       echo "duration_output=${duration}s" >> $GITHUB_OUTPUT
      #     else
      #       duration_minutes=$((duration / 60))
      #       if [[ $duration_minutes -lt 60 ]]; then
      #         echo "duration_output=${duration_minutes}m" >> $GITHUB_OUTPUT
      #       else
      #         duration_hours=$((duration_minutes / 60))
      #         duration_remaining_minutes=$((duration_minutes % 60))
      #         echo "duration_output=${duration_hours}h ${duration_remaining_minutes}m" >> $GITHUB_OUTPUT
      #       fi
      #     fi
      - name: Calculate Steps Log Time
        id: duration
        uses: RockyIsHere/actions-calculate-log-time@v0.0.9
        with:
          start_time: ${{ github.event.repository.created_at }}

      - name: Count Failed Steps
        id: count_failed_steps
        run: |
          failed_steps=0
          if [[ "${{ steps.express-trigger.outcome }}" == "failure" ]]; then
              failed_steps=$((failed_steps + 1))
          fi
          if [[ "${{ steps.artifect-upload.outcome }}" == "failure" ]]; then
              failed_steps=$((failed_steps + 1))
          fi
          echo "failed_steps_count=$failed_steps" >> $GITHUB_OUTPUT

      - name: Notify Notification On Complete
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "[Dev] Workflow *{workflow}* completed in ${{steps.duration.outputs.duration }}. Tests:3, Failures:${{steps.count_failed_steps.outputs.failed_steps_count}}"
          message_format: null
          footer: null
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
